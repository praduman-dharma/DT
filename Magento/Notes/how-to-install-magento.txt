Reference url > https://www.truecodex.com/course/magento-2/install-magento-24-in-windows-10-using-composer-and-command-line-with-elasticsearch
path of auth.json >> C:/Users/MAIN/AppData/Roaming/Composer/auth.json

max_execution_time = 18000
max_input_time = 6000
memory_limit = 1024M


First > 

# php.ini file changes

max_execution_time = 18000
max_input_time = 6000
memory_limit = 1024M


Enable below extensions by remove semicolon(;) from begining of the line.

extension=gd2
extension=intl
extension=soap
extension=sockets
extension=sodium
extension=xsl

Step 1 > Download composer

// Composer
Use the Public key as your username and the Private key as your password.
Public Key: e042610264e17ebe7f5e7c25a6f44732
Private Key: 925c984b853aefaa4b12506b553091c6


Composer >> composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.4.4

## Below command will download magento244 package with store it in magento244 folder

Composer >> composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.4.4 magento244


Step 2 > Download Elasticsearch

Step 3 > run elasticsearch  from www > elasticsearch >> bin >> batchfile >> run as administration

sudo composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition=2.3.5-p2

if you downloaded the zip folder than follow step 4


step 4 > extract magento zip in www folder


step 5 >  Now we will install Magento 2.4 via command line on windows localhost. If you want to install Magento on localhost than need to changes in file vendor\magento\framework\Image\Adapter\Gd2.php like below code.


From > 
private function validateURLScheme(string $filename) : bool
{
	$allowed_schemes = ['ftp', 'ftps', 'http', 'https'];
	$url = parse_url($filename);
	if ($url && isset($url['scheme']) && !in_array($url['scheme'], $allowed_schemes)) {
		return false;
	}

	return true;
}

To > 
private function validateURLScheme(string $filename) : bool
{
	$allowed_schemes = ['ftp', 'ftps', 'http', 'https'];
	$url = parse_url($filename);
	if ($url && isset($url['scheme']) && !in_array($url['scheme'], $allowed_schemes) && !file_exists($filename)) {
		return false;
	}

	return true;
}


Step 6 >  

After above Steps run below command for installing Magento 2.4

php -d memory_limit=6G bin/magento setup:install --base-url=http://localhost/magento244/pub/ --db-host=localhost --db-name=magento244 --db-user=root --db-password= --admin-firstname=admin --admin-lastname=admin --admin-email=user@example.com --admin-user=admin --admin-password=admin@123 --language=en_US --currency=USD --timezone=America/Chicago --use-rewrites=1 --backend-frontname="admin" --search-engine=elasticsearch7 --elasticsearch-host=localhost --elasticsearch-port=9200


# magento237

php -d memory_limit=6G bin/magento setup:install --base-url=http://localhost/magento237/ --db-host=localhost --db-name=magento237 --db-user=root --db-password= --admin-firstname=admin --admin-lastname=admin --admin-email=user@example.com --admin-user=admin --admin-password=admin@123 --language=en_US --currency=USD --timezone=America/Chicago --use-rewrites=1 --backend-frontname="admin"


sudo bin/magento setup:install --base-url=http://localhost/magento235p2/ --db-host=localhost --db-name=magento235p2 --db-user=root1 --db-password=root1 --admin-firstname=admin --admin-lastname=admin --admin-email=user@example.com --admin-user=admin --admin-password=admin@123 --language=en_US --currency=USD --timezone=America/Chicago --use-rewrites=1 --backend-frontname="admin"


************

If you forget to setup elasticsearch for catalog search than follow below step

php bin/magento config:set catalog/search/elasticsearch7_server_hostname localhost

************

Step 7 > 

        ### Run Below commands one by one

        php bin/magento setup:upgrade
        php bin/magento setup:static-content:deploy -f
        php bin/magento indexer:reindex
        php bin/magento cache:flush

Step 8 > 

Disable TwoFactorAuth Module
In localhost you can disable module Magento_TwoFactorAuth via running below command.

php bin/magento module:disable Magento_TwoFactorAuth


step 9 > 
Fixed Admin Login Issue
After installatin if showing black/blank page on admin login page then need changes in file vendor\magento\framework\View\Element\Template\File\Validator.php like below code.

From > 

protected function isPathInDirectories($path, $directories)
{
    if (!is_array($directories)) {
        $directories = (array)$directories;
    }
    $realPath = $this->fileDriver->getRealPath($path);
    foreach ($directories as $directory) {
        if (0 === strpos($realPath, $directory)) {
            return true;
        }
    }
    return false;
}

To > 

$realPath = str_replace('\\', '/', $this->fileDriver->getRealPath($path));

protected function isPathInDirectories($path, $directories)
{
    if (!is_array($directories)) {
        $directories = (array)$directories;
    }
    $realPath = $this->fileDriver->getRealPath($path);
    foreach ($directories as $directory) {
      // add below line for fix this issue
      $directory = $this->fileDriver->getRealPath($directory);
        if (0 === strpos($realPath, $directory)) {
            return true;
        }
    }
    return false;
}

Step 9 > 

Fixed Icon and Images Loading Issue
If images and icons is not loading than again run below commands


php bin/magento setup:static-content:deploy -f
php bin/magento indexer:reindex
php bin/magento cache:flush


*******************************************************************

Other Errors

If you are runing di:compile and this error is showning >> Failed to Open Stream Error While Compiling PluginListGenerator.php
Solution >> Solution for Failed to Open Stream Error While Compiling PluginListGenerator.php 

Path >> vendor/magento/framework/Interception/ PluginListGenerator.php

From >> $cacheId = implode('|', $this->scopePriorityScheme) . "|" . $this->cacheId;

To >> $cacheId = implode('-', $this->scopePriorityScheme) . "-" . $this->cacheId;



// Error > Even if after running static and upgrade command frotend and backend not showing properly than check > core_config_data table in magento phpMyAdmin

and change vaue of unsecure/base_url
from > http://localhost/magento244/
To > http://localhost/magento244/pub/

### Even after above changes frontend showing blank than follow below method

and change value of web/seo/use_rewrites = 1


// Other Errors
 
1. >>

Undefined constant "Magento\Framework\Encryption\Adapter\SODIUM_CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES"

Solution >> Run this command magento >> composer require paragonie/sodium_compat


// 404 Error

Step 1 > Remove All frontend and backend from pub/static
Step 2 > Remove code folder from magento 2
Step 3 > Remove folders from var/cache folder



## After Above Steps follow Below steps 

Step 4 >

## Enable Rewrite mode

sudo a2enmod rewrite

## Configure apache

modify /etc/apache2/apache2.conf 

From :

<Directory /var/www/>
     Options Indexes FollowSymLinks
     AllowOverride None
     Require all granted
</Directory>

To : 

<Directory /var/www/>
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
</Directory>


Step 5 >

## Then restart apache

sudo service apache2 restart

Step 6 >

sudo bin/magento setup:static-content:deploy

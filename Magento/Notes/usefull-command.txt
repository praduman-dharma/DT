**************  Most Use Commands By Me  *************

# Change php version

=> sudo a2dismod php8.1     ## Disable Old version
=> sudo a2enmod php7.4      ## Enable new version

=> sudo a2dismod php7.4     ## Disable Old version
=> sudo a2enmod php8.1      ## Enable new version

=> sudo a2dismod php8.1     ## Disable Old version
=> sudo a2enmod php8.3      ## Enable new version

=> sudo a2dismod php8.3     ## Disable Old version
=> sudo a2enmod php8.1      ## Enable new version

sudo a2dismod php8.2

sudo update-alternatives --config php

sudo systemctl restart apache2
sudo service elasticsearch restart


# permission command

sudo chmod -R 777 var/* var/cache/* pub/* generated/*

sudo chmod -R 777 var/ var/cache/ pub/ generated/

# clear cache

sudo rm -rf var/cache/ var/generation/ var/page_cache/ generated/metadata generated/code pub/static/* var/view_preprocessed/*


sudo rm -rf pub/static/* var/view_preprocessed/* var/cache/ var/page_cache

sudo rm -rf pub/static/frontend/*

sudo rm -rf var/view_preprocessed/*

sudo rm -rf generated/metadata generated/code


1. sudo rm -rf var/cache/ var/generation/ var/page_cache/ generated/metadata generated/code
2. sudo rm -rf pub/static/*
3. sudo rm -rf var/view_preprocessed/*
4. sudo rm -rf var/cache/ var/page_cache

# hassans deploy command

sudo bin/magento setup:static-content:deploy -l en_US -l ar_SA -a frontend -t Sm/destino_new -t Sm/destino_rtl -f


**************  Linux Basic Commands   **************

# Switch User

su - username

=> su - conceptive

# Switch to root User

sudo su

# Change ownership of files/folder

sudo chown -R conceptive /var/www/html/magento244/

### Folder

=> Create Single Folder

-> mkdir Conceptive

# Create Folder with sub folders

-> mkdir -p Conceptive/HelloWorld


=> Rename folder

-> mv /home/user/oldname /home/user/newname
-> mv old-folder-name new-folder-name


=> Move folder

# Move Single Folder

mv /var/folder /var/www/html/

# Move Multiple Folder

mv -t <destination> <src1> <src2> .... <srnN>

# One Level Up

mv /home/apache2/www/html/ ..

    or

mv /home/apache2/www/html/ /home/apache2/www/


=> Copy folder

# copy folder

cp -r /path/to/directory /path/to/location/new-name

# copy folder at current location

cp -r folder_name new_folder_name

-> cp -r test test-new


=> Delete Folder

rm -rf directoryname

### Folder End

# Copy File

cp Conceptive.pdf /dharma/Conceptive/

# Delete Files

unlink filename

rm filename


# Create zip

zip -r archive_name.zip folder_name


=> Examples

1. Create a zip file for a folder

zip -r my_folder.zip my_folder/

2. Create a zip file for specific files

zip archive_name.zip file1.txt file2.txt

3. Exclude certain files or folders:

zip -r archive_name.zip folder_name -x "*.log"


4.Compress multiple folders:

zip -r archive_name.zip folder1/ folder2/


# unzip command

unzip archive_name.zip

=> Examples

1. Extract a zip file in the current directory

unzip my_archive.zip


2. Extract to a specific directory

unzip my_archive.zip -d /path/to/destination/


3. List the contents of a zip file without extracting

unzip -l my_archive.zip


4. Extract specific files from a zip file

unzip my_archive.zip file1.txt file2.txt


5. Overwrite files without prompting

unzip -o my_archive.zip


6. Skip overwriting existing files

unzip -n my_archive.zip


# grep command

grep -ir "keyword" derectory name

grep -rnw 'vendor/' -e '#ff5501' --include \*.less

grep -rnw 'vendor/' -e '@color-orange-red1' --include \*.less

# find only in specific files

grep -r "Amasty_Pgrid" --include="config.php" .

# find all locations of file

find /path/to/magento/root -type f -name "product_form.xml"


find . -type f -name "swatch-renderer.js"


# find backup files

find /path/to/search -type f -regex '.*\(bkp\|bk\|backup\|copy\|old\|bak\|tmp\).*'

# get content from file

To get last static 100 lines  
    tail -n 100 <file path>

To get real time last 100 lines
    tail -f -n 100 <file path>

    tail -f -n 100 var/log/system.log

tail -n 100 var/log/cron.log | grep "Inovant"

tail -n 100 use_insider.log | grep "xfhfxuspqdmnqhspfu@poplk.com"

tail -n 100 use_insider.log | grep "wfpaxqrnvkgihptgmw@poplk.com"


# To find a specific file like product_listing.xml

find <directory_path> -name <filename>

find /var/www/html -name "product_listing.xml"

-> Case-Insensitive Search

find /var/www/html -iname "product_listing.xml"


# empty file

> filename

-> example for clearing the content of system.log

   > system.log 

   (note - don't forget to include greater than sign at starting)


# wget command

=> Download the zip from the server

wget http://Path.to.the.zip.file

Ex > wget https://magento.curlnationkw.com/pub/media/stores/folder_name.zip

=> copy website resource 

wget --mirror --convert-links https://themes.pixelstrap.com/fastkart-app/index.html

wget --mirror --convert-links https://www.nomadicroad.com/index.html

wget --mirror --convert-links --wait=2 https://tcbtestsite.000webhostapp.com/


# kill process

sudo kill -9 59799

check pids by -> ps -a


**************  Appache  **************

sudo service apache2 start
sudo service apache2 restart
sudo service apache2 status

=> below will work same like above commands

sudo systemctl start apache2
sudo systemctl restart apache2
sudo systemctl status apache2

## Change php version

=> sudo a2dismod php8.1     ## Disable Old version
=> sudo a2enmod php7.4      ## Enable new version

=> sudo a2dismod php7.4    ## Disable Old version
=> sudo a2enmod php8.1      ## Enable new version

sudo a2dismod php8.2

sudo update-alternatives --config php

sudo systemctl restart apache2
sudo service elasticsearch restart


**************  MySql  ***************

sudo service mysql start
sudo service mysql restart
sudo service mysql status


# Connect MySql Server by terminal

=> Method 1 - By root user

change to root user and after that type mysql in terminal

1. sudo su
2. mysql

=> Method 2 - without root user

mysql -u USERNAME -pPASSWORD -h HOSTNAMEORIP DATABASENAME 

-u: username
-p: password (**no space between -p and the password text**)
-h: host
last one is name of the database that you wanted to connect.

Example > 

=> mysql -u root1 -proot1 -h localhost

=> mysql -u root1 -p 

    -> after running command, it will ask for enter password than you can type password


# check the list of databases on server 

=> show databases;

# select the database to use

=> use databasename;

-> use student;


# Import Database

source /home/conceptive/Downloads/mage242clue-01112023.sql


# Export Databse

mysqldump klinq > klinq_redesign.sql

mysqldump -h localhost -u root -p klinq > klinq_redesign.sql


# replace data in all rows in mysql

UPDATE MyTable

SET StringColumn = REPLACE (StringColumn, 'SearchForThis', 'ReplaceWithThis')

WHERE SomeOtherColumn LIKE '%PATTERN%'

UPDATE MyTable SET StringColumn = REPLACE (StringColumn, 'curlnationkw.com', '127.0.0.1/curlnation-magento/pub') WHERE SomeOtherColumn LIKE '%curlnationkw.com%'

UPDATE mage_sm_megamenu_items SET data_type = REPLACE (data_type, 'curlnationkw.com', '127.0.0.1/curlnation-magento/pub')


**************  elasticsearch  ***************

sudo service elasticsearch restart
sudo systemctl restart elasticsearch


**************   nginx   ***************

sudo service nginx restart
sudo systemctl restart nginx


**************   varnish   ***************

sudo systemctl restart varnish


**************   Git   ***************

# remove changes from file

git restore filepath

-> git restore pub/health_check.php

# undo the latest changes that is committed but not pushed

git reset HEAD~1

# Discard changes 

git restore filename

git restore .

# discard all changes

git checkout .

git checkout -f

# git remove file from detecting the changes
git rm -r --cached 


# copy commit

git cherry-pick 7e993fb2d --no-commit

# revert the commit

git revert -n 589bf5124
git revert -n 93303edee


# search by log message

git log --grep="city"



**************   Magento 2   ***************

# Create Admin user

sudo bin/magento admin:user:create --admin-user=admin --admin-password=admin123 --admin-email=admin@gmail.com --admin-firstname=admin --admin-lastname=admin

# Enable Minify Css and Js by Commands

php bin/magento config:show dev/js/merge_files 1
php bin/magento config:set dev/js/minify_files 1
php bin/magento config:set dev/css/minify_files 1
php bin/magento config:set dev/css/merge_css_files 1


php bin/magento config:set csp/mode/storefront_checkout_index_index/report_only 1


# generate i18n csv file

=> Collect phrases from a specific module (e.g., Conceptive_Commerce):

bin/magento i18n:collect-phrases -o app/code/Conceptive/Commerce/i18n/en_US.csv app/code/Conceptive/Commerce

bin/magento i18n:collect-phrases -o app/code/Conceptive/OtpVerification/i18n/en_US.csv app/code/Conceptive/OtpVerification

=> Collect all translatable phrases from the entire Magento 2 installation and output them to a CSV file:

bin/magento i18n:collect-phrases -o app/i18n/en_US.csv .


# cron run

php bin/magento cron:run --group="default"


# get list of modules with version in magento

composer show -i

# get version of specific module

composer show | grep magento/module-tax

# show the all module related to the vendor 

composer show -a vendor_name

Ex > composer show -a amasty/*


# Query Log

bin/magento dev:query-log:enable

bin/magento dev:query-log:disable

bin/magento dev:profiler:enable

bin/magento dev:profiler:disable


# Magento 2 Project file permission

--> first go to magento root directy (where magento is installed)

--> Directories
find . -type d -exec chmod 755 {} \;

--> Files
find . -type f -exec chmod 644 {} \;

--> Exception for writable directories/files
chmod -R 775 var/ pub/static/ pub/media/ generated/

sudo chmod 777 -R var/ generated/ pub/

# if any grid keep loading after applying filter

DELETE FROM ui_bookmark WHERE user_id='3' AND namespace='product_listing';
DELETE FROM ui_bookmark WHERE user_id='3' AND namespace='product_attributes_grid';


# print log

$writer = new \Zend_Log_Writer_Stream(BP . '/var/log/exception.log');
$logger = new \Zend_Log();
$logger->addWriter($writer);
$logger->info("hello");

# run the export command

bin/magento queue:consumers:start exportProcessor


# reindex cluster issue fixed by following command

curl -XPUT -H "Content-Type: application/json" http://localhost:9200/_cluster/settings -d '{ "transient": { "cluster.routing.allocation.disk.threshold_enabled": false } }'

curl -XPUT -H "Content-Type: application/json" http://localhost:9200/_all/_settings -d '{"index.blocks.read_only_allow_delete": null}'


sudo bin/magento indexer:reindex catalogsearch_fulltext


# Share Commands

1. sudo rm -rf var/cache/ var/generation/ var/page_cache/ generated/metadata generated/code
2. sudo rm -rf pub/static/*
3. sudo rm -rf var/view_preprocessed/*
4. setup upgrade
5. deploy
6. di compile
7. indexer
8. clean and flush the cache
9. permission commands

## frontend

1. sudo rm -rf var/cache/*
2. sudo rm -rf pub/static/frontend/*
3. sudo rm -rf var/view_preprocessed/*


# Clear cache

1. sudo rm -rf var/cache/ var/generation/ var/page_cache/ generated/metadata generated/code
2. sudo rm -rf pub/static/*
3. sudo rm -rf var/view_preprocessed/*
4. sudo rm -rf var/cache/ var/page_cache

            or you can use below command

sudo rm -rf var/cache/ var/generation/ var/page_cache/ generated/metadata generated/code pub/static/* var/view_preprocessed/*


# clear only frontend cache

sudo rm -rf pub/static/frontend/*

sudo rm -rf var/view_preprocessed/*


# maintenance mode

bin/magento maintenance:enable
bin/magento maintenance:disable

# if the frontend is not showing than give permission like below

sudo chmod -R 777 var/*
sudo chmod -R 777 var/log/*
sudo chmod -R 777 var/cache/*
sudo chmod -R 777 pub/*
sudo chmod -R 777 generated/*
sudo chmod -R 777 magento245/*

sudo chmod -R 777 var/* var/cache/* pub/* generated/*

sudo chmod -R 777 var/ var/cache/ pub/ generated/

# change the base url using the command

sudo php bin/magento setup:store-config:set --base-url="127.0.0.1/magento247/pup/"
sudo bin/magento setup:store-config:set --base-url-secure="127.0.0.1/magento247/pup/"

sudo bin/magento setup:store-config:set --base-url-unsecure="127.0.0.1/magento247/pup/"


# start export process

sudo bin/magento queue:consumer:start exportProcessor


# Vs code Cursor issue
- Press the Insert key again that show before PrtSrc button in keyboard

